# -*- coding: utf-8 -*-
"""mod1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p65U-XkajX-z88GdMg-3kdSiim3Ay7eL
"""

arr1=np.array([1,2,3,4,5])
arr2=np.array([2,5,4,1,7])
a=np.zeros((3,3),int)
a=3+arr1 #broadcasting
a=arr1+arr2 #elementary operations
print(a)

import numpy as np
arr=np.array([1,2,3,4,5])
print(arr)
a=np.zeros((3,3))
print(a)
b=np.ones((3,3))
print(b)
c=np.arange(10)
print(c)
#manuplations
arr_reshaped=arr.reshape(5,1)
print(arr_reshaped)
arr_sliced=arr[2:4]
print(arr_sliced)

arr1=np.array([1,2,3,4,5])
arr2=np.array([2,5,4,1,7])
b=np.vstack(arr1+arr2) #adding verically
print(b)

arr1=np.array([1,2,3,4,5])
arr2=np.array([2,5,4,1,7])
b=np.stack(arr1+arr2) #adding and adding verically
print(b)

arr1=np.array([1,2,3,4,5,6])
arr2=np.split(arr1,3)
print(arr2)

arr1=np.array([[1,2,3],[4,5,6]])
arr2=arr1.T
print(arr2)

#linear algebra using numpy
arr1=np.array([[1,2],[5,6]])
arr2=np.array([[2,3],[4,5]])
arr3=np.dot(arr1,arr2)
d=np.linalg.eig(arr3)
print(d)

import numpy as np
arr1=np.array([[1,2,9],[5,6,7]])
arr2=np.array([[1,2,9],[5,6,7]])
arr3=np.sum(arr1,axis=0)#column wise
print(arr3)
arr4=np.sum(arr1,axis=1)#row wise
print(arr4)

#statistical
arr1=np.array([1,2,9,5,6,7])
arr2=np.array([[1,2,9],[5,6,7]])
print("mean",np.mean(arr1))
print("median",np.median(arr1))
print("variance",np.var(arr1))
print("standard deviation",np.std(arr1))

import matplotlib.pyplot as plt
data=np.loadtxt("/content/ppp.txt",dtype=int)
plt.plot(data)
d=np.savetxt("/content/mmm.txt",data)
print(d)

import matplotlib.pyplot as plt
a=np.array([1,2,3,4,5])
plt.plot(a)

import pandas as pd
a=["jwalitha","ramya","durga","jahnavi","lahari","sunny","dhanush"]
r=pd.Series(a,index=[67,43,44,89,34,45,23])
print(r)

"""df=pd.read_csv("/content/Consumer_Complaints.csv")
df.shape

"""

df=pd.read_csv("",sep=" ")
print(df)



df=pd.read_csv("/content/black.txt",sep="  ")
print(df.loc[2:10])

df=pd.read_excel("/content/spam.xlsx")
print(df)

df=pd.read_excel("/content/spammmmm.xlsx")
print(df)

dfn=pd.read_excel("/content/file_example_XLSX_100.xlsx")
mv=dfn['Age'].mean()
dfn=dfn.fillna(mv)
print(mv)

dfn=dfn.drop_duplicates()
print(dfn)

mt=pd.read_csv("/content/manual_testing.csv",sep=",")
print(mt)
#print(mt.groupby(['']))

df=pd.read_csv("/content/food_prices_watch.csv")
a=df.head(10)
b=df.tail(10)
mt=pd.concat([a,b],axis=0)
d=mt.to_csv("man.csv")
#print(d.groupby(['ItemLabels'])['16-Jan'].count())
#d.groupby(['ItemLabels'])['16-Jan'].count().plot(kind="bar")

tigar=np.linspace(-2*np.pi,2*np.pi,50)
print(tigar)
plt.plot(tigar,np.sin(tigar),color='black')
plt.title("sin(x)")
plt.show()

overs=np.arange(5,50,5)
overs_a=np.arange(5,30,5)
runs_i=np.array([25,51,84,131,160,189,220,250,267])
runs_a=np.array([15,41,94,110,151])
wickets=np.array([12,32,96])
plt.subplot(2,1,2)
plt.plot(overs,runs_i,color='blue',label='india')
plt.legend(loc='best')
plt.subplot(2,1,1)
plt.plot(overs_a,runs_a,color='red',label='Aus')
plt.legend(loc='best')
plt.show()

a=[230,560,780,127,128]
b=[200,160,270,127,400]
years=[1,2,3,4]
profit_a=[(a[i]-a[i-1]) for i in range(1,len(a))]
profit_b=[(b[i]-b[i-1]) for i in range(1,len(b))]
plt.subplot(2,1,2)
plt.plot(years,profit_a,color='hotpink',linewidth='3',label='companyA',marker='>',ms='10',mec='k')
plt.subplot(2,1,1)
plt.plot(years,profit_b,color='black',linestyle='dotted',label='companyB',marker='H')
plt.show()

a=np.array([25,60,5,10])
labe=["AIML","Python","Pandas","Numpy"]
explo=[0.2,0,0,0]
c=["black","yellow","purple","blue"]
plt.pie(a,labels=labe,colors=c,explode=explo,startangle=180)
plt.show()

import numpy as np
import matplotlib.pyplot as plt
runs=np.array([100,50,91,78,89,25,34,19,9,10])
w=np.array([1,0,2,0,3,7,8,9,7,5])
plt.scatter(runs,w,color='orange')
plt.title('indvsAus_score')
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_excel("/content/Book 5.xlsx")
mean=df['temperature'].mean()
print(mean)
min=df['temperature'].min()
print(min)
max=df['temperature'].max()
print(max)
treshold=32
no_days=df[df['temperature']>treshold].shape[0]
print(no_days)
date=df['date']
temperature=df['temperature']
plt.plot(date,temperature,color='black',linewidth='1',marker='.',)
x=np.array([max,min])
p=df.loc[df['temperature'].idxmax(),'date']
m=df.loc[df['temperature'].idxmin(),'date']
y=np.array([p,m])
plt.scatter(y,x,color='red')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
tips=sns.load_dataset("tips")
print(tips)

sns.scatterplot(x="total_bill",y="tip",data=tips)
plt.title("scatter plot of total bill vs. tip")
plt.xlabel("total bill ($)")
plt.ylabel("tip($)")
plt.show()

iris=sns.load_dataset("iris")
print(iris)

sns.scatterplot(x="sepal_length",y="sepal_width",data=iris)
plt.title("scatter plot of sepal_length vs. sepal_width")
plt.xlabel("sepal_length($)")
plt.ylabel("sepal_width($)")
plt.show()

iris=sns.load_dataset("iris")
print(iris)
correlation_matrix=iris.corr()
sns.heatmap(correlation_matrix,annot=True,cmap="coolwarm")
plt.title("correlation heatmap of iris data set")

plt.show()



titanic=sns.load_dataset("titanic")
print(titanic)
correlation_matrix=titanic.corr()
sns.heatmap(correlation_matrix,annot=True,cmap="coolwarm")
plt.title("correlation heatmap of titanic data set")

plt.show()

tips=sns.load_dataset("tips")
sns.violinplot(x="day",y="total_bill",data=tips)
plt.title("distribution of total_bill vs. day")
plt.xlabel("day($)")
plt.ylabel("total_bill($)")
plt.show()